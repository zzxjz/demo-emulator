name: Windows Go Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-windows:
    name: Build on Windows
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21' # 根据您的需要调整Go版本
      id: go

    - name: Install TDM-GCC (64-bit)
      run: |
        # 下载并安装TDM-GCC
        $url = "https://github.com/jmeubank/tdm-gcc/releases/download/v10.3.0-tdm64-2/tdm64-gcc-10.3.0-2.exe"
        $output = "tdm-gcc-installer.exe"
        Invoke-WebRequest -Uri $url -OutFile $output
        Start-Process -FilePath $output -Args "/S" -Wait
        # 将GCC添加到PATH
        $gccPath = "C:\TDM-GCC-64\bin"
        echo "C:\TDM-GCC-64\bin" | Out-File -FilePath $env:GITHUB_PATH -Append -Encoding utf8

    - name: Verify GCC installation
      run: gcc --version

    - name: Create Go module and build
      run: |
        # 创建临时目录并初始化Go模块
        New-Item -ItemType Directory -Path "build" -Force
        Set-Location -Path "build"
        go mod init temp-build
        # 使用go install而不是go get来安装和构建
        go install github.com/drhelius/demo-emulator@latest
        # 复制生成的可执行文件到工作目录
        Copy-Item "$env:GOPATH\bin\demo-emulator.exe" -Destination "../demo-emulator.exe"
        Set-Location -Path ".."

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: demo-emulator-windows
        path: demo-emulator.exe
